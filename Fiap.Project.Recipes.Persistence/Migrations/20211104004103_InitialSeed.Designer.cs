// <auto-generated />
using System;
using Project.Recipes.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Project.Recipes.Persistence.Migrations
{
    [DbContext(typeof(SqlDataContext))]
    [Migration("20211104004103_InitialSeed")]
    partial class InitialSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Recipes.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Doces e sobremesas",
                            Titulo = "Doces e sobremesas"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Bolos e tortas",
                            Titulo = "Bolos e tortas"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Massas",
                            Titulo = "Massas"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Carnes",
                            Titulo = "Carnes"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Aves",
                            Titulo = "Aves"
                        });
                });

            modelBuilder.Entity("Project.Recipes.Domain.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 198, DateTimeKind.Local).AddTicks(8411),
                            Descricao = "Deliciosos cookies",
                            Ingredientes = "ingredientes do cookie",
                            Preparo = "preparo do cookie",
                            Tags = "cookie;aveia;",
                            Titulo = "Cookies de aveia"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5574),
                            Descricao = "famoso pudim",
                            Ingredientes = "ingrdientes do pudim",
                            Preparo = "preparo do pudim",
                            Tags = "pudim;leite;",
                            Titulo = "Pudim de leite"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5587),
                            Descricao = "irresistível bolo de chocolate",
                            Ingredientes = "ingredientes do bolo",
                            Preparo = "preparo do bolo",
                            Tags = "bolo;chocolate;",
                            Titulo = "Bolo de chocolate"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5589),
                            Descricao = "deliciosa torta",
                            Ingredientes = "ingredientes da torta",
                            Preparo = "preparo da torta",
                            Tags = "torta;limao;",
                            Titulo = "Torta de limão"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5590),
                            Descricao = "Massa clássica",
                            Ingredientes = "ingredientes do carbonara",
                            Preparo = "preparo do carbonara",
                            Tags = "carbonara;bacon;",
                            Titulo = "Carbonara"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5592),
                            Descricao = "almoço de domingo",
                            Ingredientes = "ingredientes da lasanha",
                            Preparo = "preparo da lasanha",
                            Tags = "lasanha;queijo;",
                            Titulo = "Lasanha"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5593),
                            Descricao = "delicioso",
                            Ingredientes = "ingredientes do bolode carne",
                            Preparo = "preparo do bolo de carne",
                            Tags = "carne;queijo;presunto;",
                            Titulo = "Bolo de carne"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5595),
                            Descricao = "tradicional carne de panela",
                            Ingredientes = "ingredientes de carne de panela",
                            Preparo = "preparo de carne de panela",
                            Tags = "",
                            Titulo = "Carne de panela"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5597),
                            Descricao = "Strogonoff de frango fácil",
                            Ingredientes = "ingredientes de strogonoff de frango",
                            Preparo = "preparo de strogonoff de frango",
                            Tags = "",
                            Titulo = "Strogonoff de frango"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            DataInclusao = new DateTime(2021, 11, 3, 21, 41, 3, 199, DateTimeKind.Local).AddTicks(5598),
                            Descricao = "Medalhão de frango com bacon irresistível",
                            Ingredientes = "ingredientes de Medalhão de frango com bacon",
                            Preparo = "preparo de Medalhão de frango com bacon",
                            Tags = "frango;bacon;",
                            Titulo = "Medalhão de frango com bacon"
                        });
                });

            modelBuilder.Entity("Project.Recipes.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin",
                            Login = "admin",
                            Name = "Administrador",
                            Role = "Administrador",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("Project.Recipes.Domain.Models.Recipe", b =>
                {
                    b.HasOne("Project.Recipes.Domain.Models.Category", "CategoryRecipe")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryRecipe");
                });
#pragma warning restore 612, 618
        }
    }
}
